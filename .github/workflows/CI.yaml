name: CI

on:
  push:
    tags:
      - '!refs/tags/*'
    branches:
      - '*'

jobs:
  static-analysis:
    name: "Static Analysis"
    runs-on: "ubuntu-latest"
    steps:
      - name: "checkout"
        uses: "actions/checkout@master"
      - uses: "shivammathur/setup-php@v2"
        with:
          php-version: "7.4"
          coverage: "none"
          ini-values: "memory_limit=-1"
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: "composer install"
        run: "composer install"
      - name: "Run Psalm"
        run: "vendor/bin/psalm"

  phpunit:
    name: "Unit testing"
    runs-on: "ubuntu-latest"
    steps:
      - name: "checkout"
        uses: "actions/checkout@master"
      - uses: "shivammathur/setup-php@v2"
        with:
          php-version: "7.4"
          coverage: "pcov"
          ini-values: "memory_limit=-1"
      - name: "Get Composer Cache Directory"
        id: "composer-cache"
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: "composer install"
        run: "composer install"
      - name: "run tests"
        run: "vendor/bin/phpunit --verbose --colors=always --coverage-clover build/logs/clover.xml --coverage-text"
      - name: "phpunit-coverage-badge"
        uses: "timkrase/phpunit-coverage-badge@v1.2.0"
        with:
          coverage_badge_path: 'coverage.svg'
          push_badge: true
          report: "build/coverage/index.html"
          report_type: "html"
          repo_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: build/coverage/
      - name: "Report"
        uses: "danhunsaker/clover-reporter-action@v0.2.17-clover"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          clover-file: "build/coverage/clover.xml"
